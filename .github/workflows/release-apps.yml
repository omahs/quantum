name: Release Apps

on:
  release:
    types: [published]
  push:
    branches: [main]
  pull_request:
    branches: [main]
    paths-ignore:
      - "apps/web/**"
      - "packages/**"

permissions:
  id-token: write
  contents: read
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

env:
  APPS: "bridge-api"

jobs:
  ghcr:
    if: github.event_name != 'pull_request' || (github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]')
    name: Publish GHCR
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [bridge-api]
    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # v2.1.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f03ac48505955848960e80bbb68046aa35c7b9e7 # v2.4.1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Resolve Tags
        uses: actions/github-script@98814c53be79b1d30f795b907e553d8679345975 # v6.4.0
        id: tags
        env:
          APP: ${{ matrix.app }}
        with:
          script: return require('./.github/scripts/release-tags.js')({ context })
          result-encoding: string

      - name: Build & Publish
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # v4.0.0
        with:
          file: apps/server/Dockerfile
          push: true
          build-args: APP=bridge-api
          platforms: |
            linux/amd64
            linux/arm64
          tags: ${{ steps.tags.outputs.result }}
          cache-from: type=registry,ref=ghcr.io/birthdayresearch/quantum:buildcache
          cache-to: type=registry,ref=ghcr.io/birthdayresearch/quantum:buildcache,mode=max

  aws_ecr:
    name: Publish AWS ECR
    environment: AWS ECR
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [bridge-api]
    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0

      - uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838 # v1.7.0
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::738942439028:role/GITHUB_OIDC_WAVESHQ_BRIDGE_ECR
          role-duration-seconds: 900

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@261a7de32bda11ba01f4d75c4ed6caf3739e54be # v1.5.3
        with:
          registry-type: public

      - name: Resolve ECR Tags
        uses: actions/github-script@d556feaca394842dc55e4734bf3bb9f685482fa0 # v6.3.3
        id: ecr-tags
        with:
          script: return require('./.github/scripts/release-ecr-tags.js')({ context })
          result-encoding: string

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: public.ecr.aws/w1x3w8l6
          IMAGE_TAG: bridge-api:${{ steps.ecr-tags.outputs.result }}
        run: |
          docker build --file apps/server/Dockerfile -t $ECR_REGISTRY/$IMAGE_TAG .
          docker push $ECR_REGISTRY/$IMAGE_TAG

# TODO Check why failing permissions
#  report:
#    if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]'
#    name: Report
#    runs-on: ubuntu-latest
#    needs: [ghcr, aws_ecr]
#    steps:
#      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
#
#      - name: Create Report
#        uses: actions/github-script@98814c53be79b1d30f795b907e553d8679345975 # v6.4.0
#        id: report_message
#        with:
#          script: return require('./.github/scripts/release-report.js')({ context })
#          result-encoding: string
#
#      - name: Post Report
#        uses: marocchino/sticky-pull-request-comment@3d60a5b2dae89d44e0c6ddc69dd7536aec2071cd # v2.5.0
#        with:
#          header: release
#          message: ${{ steps.report_message.outputs.result }}
